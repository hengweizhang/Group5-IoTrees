#include "arduino_secrets.h"

/* 
  Sketch generated by the Arduino IoT Cloud Thing "Untitled"
  https://create.arduino.cc/cloud/things/220bf1eb-6144-47c8-8add-2f7b641606f9 

  Arduino IoT Cloud Variables description

  The following variables are automatically generated and updated when changes are made to the Thing

  CloudTemperatureSensor air_temperature;
  CloudIlluminance brightness;
  int status_motor;
  CloudRelativeHumidity air_humidity;
  CloudRelativeHumidity soil_humidity;

  Variables which are marked as READ/WRITE in the Cloud Thing will also have functions
  which are called when their values are changed from the Dashboard.
  These functions are generated with the Thing and added at the end of this sketch.
*/

#include "thingProperties.h"
#include <DHT.h>
#include <DHT_U.h>
// DHT11 - Version: 2.0.0


//Defines
//Pins
#define DHTPIN 6            //D6 DHT digital
#define DHTTYPE DHT11       
#define SOILPIN 17          //A0/D17 Soil Humidity Analog input
#define MOTORPIN 23         //A6/D23 Motor  Analog Output
#define BRIGHTNESSPIN 20    //A3/D20 Photosensor Analog Input 

//Sensors
#define BRIGHTNESS_LOW 11
#define BRIGHTNESS_HIGH 231

//Variables
// Values need to be adapted based on opservations
#define wetSoil 277 // Define max value we consider soil 'wet'
#define drySoil 380 // Define min value we consider soil 'dry'

// CloudUpdateVariabls
/*
 CloudTemperatureSensor air_temperature;
  CloudIlluminance brightness;
  int status_motor;
  CloudRelativeHumidity air_humidity;
  CloudRelativeHumidity soil_humidity;
*/
//IOT
int wifiStatus = 0;   //1 = ok, 0 = error
int cloudStatus = 0;  //1 = ok, 0 = error

//DHT
uint updatePeriod = 1000;  //Time periode between readings
unsigned long previousMillisDHT = 0;
DHT dht(DHTPIN, DHTTYPE);

//Photosensor
int targetSoilHumidity = 0;  //value = 0-255

//Motor
int statusMotor = 0;


void setup() {
  // Initialize serial and wait for port to open:
  Serial.begin(9600);
  // This delay gives the chance to wait for a Serial Monitor without blocking if none is found
  delay(1500);

  //initiate Pins
  //D6 DHT digital
  //D17 Soil Humidity Analog input
  // D20 Photosensor Analog Input 
  //D23 Motor  Analog Output
  pinMode(SOILPIN,INPUT);
  pinMode(BRIGHTNESSPIN, INPUT);
  pinMode(MOTORPIN, OUTPUT);

  // Defined in thingProperties.h
  initProperties();

  // Connect to Arduino IoT Cloud
  ArduinoCloud.begin(ArduinoIoTPreferredConnection);

  /*
     The following function allows you to obtain more information
     related to the state of network and IoT Cloud connection and errors
     the higher number the more granular information youâ€™ll get.
     The default is 0 (only errors).
     Maximum is 4
 */
  setDebugMessageLevel(2);
  ArduinoCloud.printDebugInfo();


  //USER CODE
  dht.begin();
  //DHT INIT
}

void loop() {
  ArduinoCloud.update();
  // Your code here

  //Soild Moisture Measurement
  int moisture = analogRead(SOILPIN); //reading analog input
  Serial.print("Analog output: ");
  Serial.println(moisture);
  
  // Determine status of our soil
  if (moisture < wetSoil) {
    Serial.println("Status: Soil is too wet");
  } else if (moisture >= wetSoil && moisture < drySoil) {
    Serial.println("Status: Soil moisture is perfect");
  } else {
    Serial.println("Status: Soil is too dry - time to water!");
    //value: the duty cycle: between 0 (always off) and 255 (always on). Allowed data types: int.
    // analogWrite(MOTORPIN, 100);
    // delay(100);
    // analogWrite(MOTORPIN, 0);
    //start watering motor for some time to make it more humid
  }
  Serial.println();
  
  //Brightness Measurement
  int brt_pin = analogRead(BRIGHTNESSPIN);
  int brightness = map(brt_pin, BRIGHTNESS_LOW, BRIGHTNESS_HIGH, 0, 100);
  Serial.print(F("Brightness: "));
  Serial.print(brightness);

  //Humidity and Temperature Measurement
  unsigned long currentMillisDHT = millis();
  if (currentMillisDHT - previousMillisDHT >= updatePeriod) {
    
    // Measuring Humidity
    previousMillisDHT = currentMillisDHT;
    air_temperature = dht.readTemperature();
    air_humidity = dht.readHumidity();
    soil_humidity = analogRead(SOILPIN);
    Serial.print(F("\n Humidity: "));
    Serial.print(air_humidity);
    Serial.print(F("%  Temperature: "));
    Serial.print(air_temperature);
    Serial.print(F("Soil Humidity: "));
    Serial.print(soil_humidity);
    Serial.print(F("\n"));
  }
}
